# To trigger the workflow on each push, branches: [ main ]
# To trigger the workflow on push of tags beginning with v, tags: ['v*']
# then
# git tag v1.0
# git push origin v1.0
# or
# git tag -a build-test-03
# git push --follow-tags

name: Pynsource app built on all OS's
on:
  push:
    # branches: [ main ]
    tags: ['build-test*']
jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-18.04, ubuntu-20.04, windows-latest]

    # job level env
    env:
      PYTHON_VERSION: 3.9

    steps:

    - name: Downgrade Python to 3.8  # wxPython 3.9 not available on Ubuntu 20.04 yet
      if: matrix.os == 'ubuntu-20.04'
      run: echo "PYTHON_VERSION=3.8" >> $GITHUB_ENV

    - name: Check out current repo into a subdir
      uses: actions/checkout@v2
      with:
        path: pynsource/

    - name: Check out ogl2 (private)
      uses: actions/checkout@v2
      with:
        repository: abulka/ogl2
        token: ${{ secrets.my_pat }}
        path: ogl2/

    - name: Check out pynsource-rego (private)
      uses: actions/checkout@v2
      with:
        repository: abulka/pynsource-rego
        token: ${{ secrets.my_pat }}
        path: pynsource-rego/

    - name: View resulting directory structure
      shell: bash
      run: |
        ls -l
        ls -l pynsource/
        ls -l pynsource-rego/
        ls -l ogl2/

    - name: Setup Python please
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install wheel

        if [ "$RUNNER_OS" == "Linux" ]; then
          pip install -U -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/${{ matrix.os }} wxPython
          sudo apt-get install libsdl2-mixer-2.0-0 libsdl2-image-2.0-0 libsdl2-2.0-0

        elif [ "$RUNNER_OS" == "macOS" ]; then
          pip install wxpython

        elif [ "$RUNNER_OS" == "Windows" ]; then
            # choco install important_windows_software
            pip install wxpython

        else
            echo "$RUNNER_OS not supported"
            exit 1
        fi

        pip install -r pynsource/requirements.txt
        pip install pyinstaller

    - name: Run Python and print version_info
      run: |
        python -c "import sys; print(sys.version_info)"
        # uname -a

    - name: Build executable using Pyinstaller
      shell: bash
      run: |
        cd pynsource/
        python bin/_buildsamples.py
        pyinstaller --noconfirm ../ogl2/bin/pynsource-github-actions.spec
        cp README.md dist/Readme.txt
        ls -l dist/

    - name: Get the tag name
      shell: bash
      run: echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

    - name: Save generated executable file as an artifact
      uses: actions/upload-artifact@v2
      with:
        # The act of downloading zips up the artifact and adds the .zip to the downloaded file
        name: pynsource-${{ matrix.os }}-${{ env.TAG }}
        path: pynsource/dist/